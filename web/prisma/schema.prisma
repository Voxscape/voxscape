// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
  binaryTargets   = ["linux-musl", "native", "debian-openssl-3.0.x", "debian-openssl-1.1.x"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [pgcrypto]
}

// next-auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

// next-auth
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// next-auth
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  // ours
  voxFiles      VoxFile[]
  updatedAt     DateTime  @updatedAt
  createdAt     DateTime  @default(now())
}

// next-auth
model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// ours
model VoxFile {
  id           String   @id @default(dbgenerated("encode(gen_random_bytes(16),'hex')"))
  ownerUserId  String
  ownerUser    User     @relation(fields: [ownerUserId], references: [id])
  contentType  String
  assetUrl     String
  title        String?  @db.VarChar(255)
  origFilename String   @default("unnamed.vox") @db.VarChar(255)
  desc         String   @default("") @db.VarChar(10000)
  isPrivate    Boolean  @default(false)
  updatedAt    DateTime @updatedAt
  createdAt    DateTime @default(now())

  @@index([ownerUserId])
}
